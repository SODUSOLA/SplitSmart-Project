
import express from 'express';
import { createGroup } from '../Controllers/groupController.js';
import { authMiddleware as protect } from '../Middlewares/authMiddleware.js';

const router = express.Router();

/**
 * @swagger
 * /api/groups:
 *   post:
 *     summary: Create a new group
 *     tags: [Groups]
 *     security:
 *       - BearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/Group'
 *     responses:
 *       201:
 *         description: Group created successfully
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 message:
 *                   type: string
 *                 group:
 *                   type: object
 *                   properties:
 *                     name:
 *                       type: string
 *                     description:
 *                       type: string
 *                     members:
 *                       type: array
 *                       items:
 *                         type: string
 *       400:
 *         description: Group name already exists
 *       401:
 *         description: Unauthorized (invalid/missing token)
 *       500:
 *         description: Server error
 */
router.post('/', protect, createGroup);

export default router;



import express from 'express';
import { registerUser } from '../Controllers/userController.js';

const router = express.Router();

/**
 * @swagger
 * /api/users/register:
 *   post:
 *     summary: Register a new user
 *     tags: [Users]
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/User'
 *     responses:
 *       201:
 *         description: User registered successfully
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 message:
 *                   type: string
 *                 token:
 *                   type: string
 *                 user:
 *                   type: object
 *                   properties:
 *                     id:
 *                       type: string
 *                     username:
 *                       type: string
 *       400:
 *         description: User already exists
 *       500:
 *         description: Server error
 */
router.post('/register', registerUser);

export default router;




import express from 'express';
import { registerUser } from '../Controllers/userController.js';

const router = express.Router();


router.post('/register', registerUser);
export default router;
